databaseChangeLog:
  - preConditions:
      - dbms:
          type: postgresql
      - runningAs:
          username: ${AQTS_SCHEMA_OWNER_USERNAME}

  - changeSet:
      author: ssoper
      id: "create.table.${AQTS_SCHEMA_NAME}.discrete_ground_water"
      preConditions:
        - onFail: MARK_RAN
        - onError: HALT
        - not:
            - tableExists:
                schemaName: ${AQTS_SCHEMA_NAME}
                tableName: discrete_ground_water
      changes:
        - sqlFile:
            path: discreteGroundWater.sql
            relativeToChangelogFile: true
        - rollback: drop table if exists ${AQTS_SCHEMA_NAME}.discrete_ground_water;

  - changeSet:
      author: ssoper
      id: "alter.table.${AQTS_SCHEMA_NAME}.discrete_ground_water.add.column.datum"
      preConditions:
        - onFail: MARK_RAN
        - onError: HALT
        - not:
            - columnExists:
                schemaName: ${AQTS_SCHEMA_NAME}
                tableName: discrete_ground_water
                columnName: datum
      changes:
        - sql: alter table ${AQTS_SCHEMA_NAME}.discrete_ground_water add column if not exists datum character varying (20);
        - rollback: alter table ${AQTS_SCHEMA_NAME}.discrete_ground_water drop column datum;

  - changeSet:
      author: ssoper
      id: "alter.table.${AQTS_SCHEMA_NAME}.discrete_ground_water.drop.constraint.if.exists.discrete_ground_water_ak"
      preConditions:
        - onFail: MARK_RAN
        - onError: HALT
        - constraintExists:
            schemaName: ${AQTS_SCHEMA_NAME}
            tableName: discrete_ground_water
            constraintName: discrete_ground_water_ak
      changes:
        - sql: alter table ${AQTS_SCHEMA_NAME}.discrete_ground_water drop constraint if exists discrete_ground_water_ak;
        - rollback: alter table ${AQTS_SCHEMA_NAME}.discrete_ground_water add constraint discrete_ground_water_ak unique (field_visit_identifier,location_identifier,parameter,monitoring_method,field_visit_time);

  - changeSet:
      author: ssoper
      id: "alter.table.${AQTS_SCHEMA_NAME}.discrete_ground_water.add.constraint.discrete_ground_water_ak_v2"
      preConditions:
        - onFail: MARK_RAN
        - onError: HALT
        - not:
            - constraintExists:
                schemaName: ${AQTS_SCHEMA_NAME}
                tableName: discrete_ground_water
                constraintName: discrete_ground_water_ak_v2
      changes:
        - sql: alter table ${AQTS_SCHEMA_NAME}.discrete_ground_water add constraint discrete_ground_water_ak_v2 unique (field_visit_identifier,location_identifier,parameter,monitoring_method,field_visit_time, datum);
        - rollback: alter table ${AQTS_SCHEMA_NAME}.discrete_ground_water drop constraint discrete_ground_water_ak_v2;

  - changeSet:
      author: ssoper
      id: "alter.table.${AQTS_SCHEMA_NAME}.discrete_ground_water.alter.column.completed_work.type.jsonb"
      preConditions:
        - onFail: MARK_RAN
        - onError: HALT
      changes:
        - sql: alter table ${AQTS_SCHEMA_NAME}.discrete_ground_water alter column completed_work type jsonb using completed_work::jsonb;

  - changeSet:
      author: ssoper
      id: "alter.table.${AQTS_SCHEMA_NAME}.discrete_ground_water.add.nwis_method_code"
      preConditions:
        - onFail: MARK_RAN
        - onError: HALT
        - not:
            - columnExists:
                schemaName: ${AQTS_SCHEMA_NAME}
                tableName: discrete_ground_water
                columnName: nwis_method_code
      changes:
        - sql: alter table ${AQTS_SCHEMA_NAME}.discrete_ground_water add column if not exists nwis_method_code character varying (1);
        - rollback: alter table ${AQTS_SCHEMA_NAME}.discrete_ground_water drop column nwis_method_code;

# The Aquarius ApprovalLevel is to be a 4 digit code, but a 10 vchar will hopefully avoid future issues
  - changeSet:
      author: eeverman
      id: "alter.table.${AQTS_SCHEMA_NAME}.discrete_ground_water.add.approval_level"
      preConditions:
        - onFail: MARK_RAN
        - onError: HALT
        - not:
            - columnExists:
                schemaName: ${AQTS_SCHEMA_NAME}
                tableName: discrete_ground_water
                columnName: approval_level
      changes:
        - sql: alter table ${AQTS_SCHEMA_NAME}.discrete_ground_water add column if not exists approval_level character varying (10);
        - rollback: alter table ${AQTS_SCHEMA_NAME}.discrete_ground_water drop column approval_level;

  - changeSet:
      author: eeverman
      id: "alter.table.${AQTS_SCHEMA_NAME}.discrete_ground_water.add.approval_level_description"
      preConditions:
        - onFail: MARK_RAN
        - onError: HALT
        - not:
            - columnExists:
                schemaName: ${AQTS_SCHEMA_NAME}
                tableName: discrete_ground_water
                columnName: approval_level_description
      changes:
        - sql: alter table ${AQTS_SCHEMA_NAME}.discrete_ground_water add column if not exists approval_level_description text;
        - rollback: alter table ${AQTS_SCHEMA_NAME}.discrete_ground_water drop column approval_level_description;

  - changeSet:
      author: ayan
      id: "alter.table.${AQTS_SCHEMA_NAME}.discrete_ground_water.add.created_at"
      preConditions:
        - onFail: MARK_RAN
        - onError: HALT
        - not:
            - columnExists:
                schemaName: ${AQTS_SCHEMA_NAME}
                tableName: discrete_ground_water
                columnName: created_at
      changes:
        - sql: alter table ${AQTS_SCHEMA_NAME}.discrete_ground_water add column if not exists created_at timestamptz not null default now();
        - rollback: alter table ${AQTS_SCHEMA_NAME}.discrete_ground_water drop column created_at;

  - changeSet:
      author: ayan
      id: "alter.table.${AQTS_SCHEMA_NAME}.discrete_ground_water.add.updated_at"
      preConditions:
        - onFail: MARK_RAN
        - onError: HALT
        - not:
            - columnExists:
                schemaName: ${AQTS_SCHEMA_NAME}
                tableName: discrete_ground_water
                columnName: updated_at
      changes:
        - sql: alter table ${AQTS_SCHEMA_NAME}.discrete_ground_water add column if not exists updated_at timestamptz not null default now();
        - rollback: alter table ${AQTS_SCHEMA_NAME}.discrete_ground_water drop column updated_at;

  # After changes to use reading_qualifiers (plural) reading_qualifier is no longer needed
  - changeSet:
      author: eeverman
      id: "alter.table.${AQTS_SCHEMA_NAME}.discrete_ground_water.drop.reading_qualifier"
      preConditions:
        - onFail: MARK_RAN
        - onError: HALT
        - columnExists:
            schemaName: ${AQTS_SCHEMA_NAME}
            tableName: discrete_ground_water
            columnName: reading_qualifier
      changes:
        - sql: alter table ${AQTS_SCHEMA_NAME}.discrete_ground_water drop column if exists reading_qualifier;
        - rollback: alter table ${AQTS_SCHEMA_NAME}.discrete_ground_water add column if not exists reading_qualifier text;

